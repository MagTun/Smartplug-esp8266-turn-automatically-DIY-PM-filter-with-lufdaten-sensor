>D
; wait for 2 consecutive measures above "thresholds high" before turning filter on then stay on until both PM10 and 2.5 below threshold low 
; force mode : when press button physical or UI : thansk to @gemu2015

ipa="192.168.1.39:888"
; + thresholds High (default:10-5) 
pm10th=10
pm25th=5
; + threshold low (default:5-2) 
pm10tl=7
pm25tl=2
; + delay (= delay Lufdaten sensor + about 5sec)
delayd=160
;+ + +below: modify at your own risk! 
lastValueWasHigh=0
;convert value from json
pm10=""
pm10n=0
pm25=""
pm25n=0
; http call 
res=0
; avoid many print
flg=0
;force mode
fbut=0
powerstate=0
spwr=0
>B
; force mode
->webbutton1 force
->webbutton2 filter on
>S
; call every delayd seconds
if upsecs%delayd==0
then
flg=1
; read json then call section E
res=http(ipa "/data.json")
flg=0
;endif delayd
endif

; check force
fbut=pwr[1]
if chg[fbut]>0
then
; force changed
if fbut>0
then
; force on
->power2 1
else
; force off if value low
;if spwr==0
;then
->power2 0
;endif
endif
endif

>E
if flg>0
then
;get  4th/6th occur of value :  eg.  ":"5.22"},{"
pm10=gwr("value" 4)
pm25=gwr("value" 6)

; remove  " so keep only numbers
pm10=st(pm10 " 2)
print PM10  %pm10%
pm25=st(pm25 " 2)
print PM2.5  %pm25%

; if no value extracted from json (ex: when luftdaten make a measure/bug), then keep old value, otherwise replace by new value as number
if (pm25!="" or pm25!="[]}")
then
; convert string into number
pm10n=pm10
pm25n=pm25
;endif empty var
endif

; check if the PM filter should be turn on/off
; powerstate=pwr[1] ; changed for force mode
powerstate=spwr
; if powerstate ON
if powerstate==1.00
then 
if (pm25n<pm25tl and pm10n<pm10tl)
then
lastValueWasHigh=0
spwr=0
print Values low: Filter OFF
else
lastValueWasHigh=1
print Filter still ON [last values (>=2) were high]
; endif pmXXte
endif

else
;if power OFF
if (pm25n>pm25th or pm10n>pm10th)  
then
if lastValueWasHigh==1 
then
print Filter turned ON (last 2 value were high) 
spwr=1
else 
lastValueWasHigh=1
print Filter OFF but last value high for 1st time
endif

else 
; if poweroff and pm25n<pm25th or pm10n<pm10th
lastValueWasHigh=0
print Filter kept OFF
spwr=0
;endif pm25/pm10
endif

;endif powerstate
endif

;endif flg
endif

; only set if force == 0
if pwr[1]==0
then
=>power2  %0spwr%
endif

>W
;info UI
PM10: {m}<span style="color: yellow;">%pm10n% </span>
PM25: {m}<span style="color: yellow;">%pm25n% </span>
Values to high: {m}<span style="color: yellow;">%0spwr% </span>
